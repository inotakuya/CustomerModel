// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package jp.com.inotaku.web;

import jp.com.inotaku.domain.Customer;
import jp.com.inotaku.domain.CustomerAttribute;
import jp.com.inotaku.service.CustomerAttributeService;
import jp.com.inotaku.service.CustomerService;
import jp.com.inotaku.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    CustomerService ApplicationConversionServiceFactoryBean.customerService;
    
    @Autowired
    CustomerAttributeService ApplicationConversionServiceFactoryBean.customerAttributeService;
    
    public Converter<Customer, String> ApplicationConversionServiceFactoryBean.getCustomerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<jp.com.inotaku.domain.Customer, java.lang.String>() {
            public String convert(Customer customer) {
                return new StringBuilder().append(customer.getCustomerId()).append(' ').append(customer.getChallengeQuestionId()).append(' ').append(customer.getLocaleCode()).toString();
            }
        };
    }
    
    public Converter<Long, Customer> ApplicationConversionServiceFactoryBean.getIdToCustomerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, jp.com.inotaku.domain.Customer>() {
            public jp.com.inotaku.domain.Customer convert(java.lang.Long id) {
                return customerService.findCustomer(id);
            }
        };
    }
    
    public Converter<String, Customer> ApplicationConversionServiceFactoryBean.getStringToCustomerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, jp.com.inotaku.domain.Customer>() {
            public jp.com.inotaku.domain.Customer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Customer.class);
            }
        };
    }
    
    public Converter<CustomerAttribute, String> ApplicationConversionServiceFactoryBean.getCustomerAttributeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<jp.com.inotaku.domain.CustomerAttribute, java.lang.String>() {
            public String convert(CustomerAttribute customerAttribute) {
                return new StringBuilder().append(customerAttribute.getCustomerAttrId()).append(' ').append(customerAttribute.getName()).append(' ').append(customerAttribute.getValueString()).toString();
            }
        };
    }
    
    public Converter<Long, CustomerAttribute> ApplicationConversionServiceFactoryBean.getIdToCustomerAttributeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, jp.com.inotaku.domain.CustomerAttribute>() {
            public jp.com.inotaku.domain.CustomerAttribute convert(java.lang.Long id) {
                return customerAttributeService.findCustomerAttribute(id);
            }
        };
    }
    
    public Converter<String, CustomerAttribute> ApplicationConversionServiceFactoryBean.getStringToCustomerAttributeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, jp.com.inotaku.domain.CustomerAttribute>() {
            public jp.com.inotaku.domain.CustomerAttribute convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CustomerAttribute.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCustomerToStringConverter());
        registry.addConverter(getIdToCustomerConverter());
        registry.addConverter(getStringToCustomerConverter());
        registry.addConverter(getCustomerAttributeToStringConverter());
        registry.addConverter(getIdToCustomerAttributeConverter());
        registry.addConverter(getStringToCustomerAttributeConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
